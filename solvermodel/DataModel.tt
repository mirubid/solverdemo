<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>

<#@ assembly name="NetStandard" #>
<#@ assembly name="System.Runtime" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Linq" #>
<#@ assembly name="System.Data" #>


<#@ include file="assemblyrefs.ttinclude" #>
<#@ include file="CodeGenHelper.ttinclude" #>

<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>

<#@ import namespace="Microsoft.Extensions.Configuration" #>
<#@ import namespace="Microsoft.Extensions.Configuration.Json" #>
<#@ import namespace="DatabaseSchemaReader" #>
<#@ import namespace="DatabaseSchemaReader.DataSchema" #>
<#@ import namespace="System.Data.SqlClient" #>

using System;
using System.ComponentModel.DataAnnotations;

namespace solverweb.model {
<#

using(var cnn = new SqlConnection("Data Source=(localdb)\\ProjectsV13;Initial Catalog=WideWorldImporters;Integrated Security=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False;ApplicationIntent=ReadWrite;MultiSubnetFailover=False"))
using(var dbReader = new DatabaseReader(cnn))
{
    var schema = dbReader.ReadAll();

    foreach(var table in schema.Tables)
    {
        if(table.Name.EndsWith("_Archive"))continue;
        GenClass(table);

    }
}

#>
}
<#+
void GenClass(DatabaseTable table){
#>
    ///<summary> <#=table.SchemaOwner#>.<#=table.Name#> </summary>
    public class <#=table.Name#>
    {
    <#+
    PushIndent("    ");
    foreach(var col in table.Columns){
        GenProperty(col);
    }
    PopIndent();
    #>
    }
<#+
}

void GenProperty(DatabaseColumn col){
    string kind = GetKind(col);
    if(kind==null){
    
    return;
    }
    if (col.IsPrimaryKey)
    {
#>
   [Key]
<#+        
    }
    #>
    public <#= kind #><#=GetNullable(col)#> <#=col.Name#>{get;set;}
<#+
}
#>

